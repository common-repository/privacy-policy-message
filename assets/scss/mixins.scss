@mixin border-radius($radius: 7.5px) {
    -webkit-border-radius: $radius;
       -moz-border-radius: $radius;
            border-radius: $radius;
}
@mixin grayscale(){
    -webkit-filter: grayscale(1);
            filter: gray;
            filter: grayscale(1);
}
@mixin no-filter(){
    -webkit-filter: none;
            filter: none;
            filter: none;
}
@mixin transition($trans:all 500ms ease) {
    -webkit-transition: $trans;
       -moz-transition: $trans;
        -ms-transition: $trans;
         -o-transition: $trans;
            transition: $trans;
}
@mixin transform($transforms) {
    -webkit-transform: $transforms;
       -moz-transform: $transforms;
        -ms-transform: $transforms;
         -o-transform: $transforms;
            transform: $transforms;
}
@mixin text-shadow($shadow){
    -webkit-text-shadow: $shadow;
       -moz-text-shadow: $shadow;
        -ms-text-shadow: $shadow;
         -o-text-shadow: $shadow;
            text-shadow: $shadow;
}
@mixin transform-origin($origin: 0 0) {
    -webkit-transform-origin: $origin;
       -moz-transform-origin: $origin;
        -ms-transform-origin: $origin;
         -o-transform-origin: $origin;
            transform-origin: $origin;
}
@mixin scale($scale) {
     @include transform(scale($scale));
} 
@mixin Opacity($value){
    $IEValue: $value*100;
    opacity: $value;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
    filter: alpha(opacity=$IEValue);
}
@mixin box-shadow($value) {
    -webkit-box-shadow: $value;
       -moz-box-shadow: $value;
            box-shadow: $value;
}
@mixin order($nbr) {
    -webkit-box-ordinal-group: $nbr;
    -ms-flex-order: $nbr;
             order: $nbr;
}
@mixin fa(){
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    transform: translate(0, 0);
}